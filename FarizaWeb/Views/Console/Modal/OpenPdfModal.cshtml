@{
    Layout = null;
}

<div class="modal-header">
    <h5 class="modal-title">PDF查看器</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>
<div class="modal-body p-0">
    <!-- PDF工具栏 -->
    <div class="pdf-toolbar bg-light p-2 border-bottom">
        <div class="row align-items-center">
            <div class="col-auto">
                <button class="btn btn-sm btn-outline-secondary" id="prevPage">
                    <i class="fa fa-chevron-left"></i> 上一页
                </button>
                <button class="btn btn-sm btn-outline-secondary" id="nextPage">
                    下一页 <i class="fa fa-chevron-right"></i>
                </button>
            </div>
            <div class="col-auto">
                <span>第 <span id="pageNum">1</span> 页，共 <span id="pageCount">0</span> 页</span>
            </div>
            <div class="col-auto">
                <button class="btn btn-sm btn-outline-secondary" id="zoomOut">
                    <i class="fa fa-search-minus"></i>
                </button>
                <span class="mx-2" id="zoomLevel">100%</span>
                <button class="btn btn-sm btn-outline-secondary" id="zoomIn">
                    <i class="fa fa-search-plus"></i>
                </button>
            </div>
            <div class="col-auto ms-auto">
                <button class="btn btn-sm btn-outline-primary" id="downloadPdf">
                    <i class="fa fa-download"></i> 下载
                </button>
            </div>
        </div>
    </div>

    <!-- PDF内容区域 -->
    <div class="pdf-container" style="height: 70vh; overflow: auto; background: #f5f5f5;">
        <div class="text-center p-4" id="loadingDiv">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">正在加载PDF...</p>
        </div>
        <canvas id="pdfCanvas" style="display: none; margin: 20px auto; display: block; box-shadow: 0 4px 8px rgba(0,0,0,0.1);"></canvas>
    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-light" onclick="$qar.removeCustomModal()">关闭</button>
</div>

<script type="module">
    // 导入PDF.js
    import * as pdfjsLib from '/console/js/lib/pdf.mjs';

    // 配置PDF.js
    pdfjsLib.GlobalWorkerOptions.workerSrc = '/console/js/lib/pdf.worker.mjs';
    pdfjsLib.GlobalWorkerOptions.sandboxSrc = '/console/js/lib/pdf.sandbox.mjs';

    // PDF相关变量
    let pdfDoc = null;
    let pageNum = 1;
    let pageRendering = false;
    let pageNumPending = null;
    let scale = 1.2;
    let canvas = null;
    let ctx = null;
    let currentPdfPath = '';

    // 初始化PDF查看器
    function initPdfViewer() {
        canvas = document.getElementById('pdfCanvas');
        if (canvas) {
            ctx = canvas.getContext('2d');
            bindPdfEvents();
        }
    }

    // 加载PDF
    async function loadPdf(pdfPath) {
        try {
            currentPdfPath = pdfPath;
            showLoading();

            const loadingTask = pdfjsLib.getDocument(pdfPath);
            pdfDoc = await loadingTask.promise;

            document.getElementById('pageCount').textContent = pdfDoc.numPages;
            document.getElementById('pageNum').textContent = pageNum;

            await renderPage(pageNum);
            hideLoading();

        } catch (error) {
            console.error('Error loading PDF:', error);
            alert('PDF加载失败，请检查文件路径');
            hideLoading();
        }
    }

    // 渲染页面
    async function renderPage(num) {
        pageRendering = true;

        try {
            const page = await pdfDoc.getPage(num);
            const viewport = page.getViewport({ scale: scale });

            canvas.height = viewport.height;
            canvas.width = viewport.width;

            const renderContext = {
                canvasContext: ctx,
                viewport: viewport
            };

            await page.render(renderContext).promise;
            pageRendering = false;

            if (pageNumPending !== null) {
                renderPage(pageNumPending);
                pageNumPending = null;
            }

            document.getElementById('pageNum').textContent = num;

        } catch (error) {
            console.error('Error rendering page:', error);
            pageRendering = false;
        }
    }

    // 排队渲染页面
    function queueRenderPage(num) {
        if (pageRendering) {
            pageNumPending = num;
        } else {
            renderPage(num);
        }
    }

    // 绑定PDF控制事件
    function bindPdfEvents() {
        // 上一页
        const prevBtn = document.getElementById('prevPage');
        if (prevBtn) {
            prevBtn.addEventListener('click', function() {
                if (pageNum <= 1) return;
                pageNum--;
                queueRenderPage(pageNum);
            });
        }

        // 下一页
        const nextBtn = document.getElementById('nextPage');
        if (nextBtn) {
            nextBtn.addEventListener('click', function() {
                if (pageNum >= pdfDoc.numPages) return;
                pageNum++;
                queueRenderPage(pageNum);
            });
        }

        // 放大
        const zoomInBtn = document.getElementById('zoomIn');
        if (zoomInBtn) {
            zoomInBtn.addEventListener('click', function() {
                scale += 0.2;
                updateZoomLevel();
                queueRenderPage(pageNum);
            });
        }

        // 缩小
        const zoomOutBtn = document.getElementById('zoomOut');
        if (zoomOutBtn) {
            zoomOutBtn.addEventListener('click', function() {
                if (scale <= 0.4) return;
                scale -= 0.2;
                updateZoomLevel();
                queueRenderPage(pageNum);
            });
        }

        // 下载
        const downloadBtn = document.getElementById('downloadPdf');
        if (downloadBtn) {
            downloadBtn.addEventListener('click', function() {
                if (currentPdfPath) {
                    const link = document.createElement('a');
                    link.href = currentPdfPath;
                    link.download = currentPdfPath.split('/').pop();
                    link.click();
                }
            });
        }
    }

    // 更新缩放级别显示
    function updateZoomLevel() {
        const percentage = Math.round(scale * 100);
        const zoomElement = document.getElementById('zoomLevel');
        if (zoomElement) {
            zoomElement.textContent = percentage + '%';
        }
    }

    // 显示加载状态
    function showLoading() {
        const loadingDiv = document.getElementById('loadingDiv');
        const canvas = document.getElementById('pdfCanvas');
        if (loadingDiv) loadingDiv.style.display = 'block';
        if (canvas) canvas.style.display = 'none';
    }

    // 隐藏加载状态
    function hideLoading() {
        const loadingDiv = document.getElementById('loadingDiv');
        const canvas = document.getElementById('pdfCanvas');
        if (loadingDiv) loadingDiv.style.display = 'none';
        if (canvas) canvas.style.display = 'block';
    }

    // 重置PDF查看器
    function resetPdfViewer() {
        pdfDoc = null;
        pageNum = 1;
        scale = 1.2;
        pageRendering = false;
        pageNumPending = null;
        currentPdfPath = '';

        if (ctx && canvas) {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
        }

        const pageNumElement = document.getElementById('pageNum');
        const pageCountElement = document.getElementById('pageCount');
        if (pageNumElement) pageNumElement.textContent = '1';
        if (pageCountElement) pageCountElement.textContent = '0';
        updateZoomLevel();
    }

    // 导出函数供外部使用
    window.initPdfViewer = initPdfViewer;
    window.loadPdf = loadPdf;
    window.resetPdfViewer = resetPdfViewer;

    // 初始化
    initPdfViewer();
</script>

<style>
    .pdf-container {
        text-align: center;
    }

    #pdfCanvas {
        border: 1px solid #ddd;
        max-width: 100%;
    }

    .pdf-toolbar {
        background-color: #f8f9fa !important;
    }

    .pdf-container::-webkit-scrollbar {
        width: 8px;
    }

    .pdf-container::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    .pdf-container::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 4px;
    }
</style>